name: Build and Deploy to Docker Hub

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout code (needed for building Docker image)
      - name: Check Out Repo
        uses: actions/checkout@v2

      # 2️⃣ Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3️⃣ Build and Push Docker image
      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: hemanth2113/codedaddy:latest

      # 4️⃣ Deploy to server via SSH using Docker Compose
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Ensure Docker is installed
            if ! command -v docker > /dev/null; then
              echo "Docker not found! Please install Docker on the server."
              exit 1
            fi

            # Ensure Docker Compose is installed
            if ! command -v docker-compose > /dev/null && ! command -v docker compose > /dev/null; then
              echo "Docker Compose not found! Please install Docker Compose on the server."
              exit 1
            fi

            # Create a temporary docker-compose.yml for deployment
            cat <<EOF > /tmp/docker-compose.yml
            version: "3.9"

            services:
              web:
                image: hemanth2113/codedaddy:latest
                ports:
                  - "8000:8000"
                restart: unless-stopped

              worker:
                image: hemanth2113/codedaddy:latest
                command: rq worker
                restart: unless-stopped
            EOF

            # Navigate to /tmp and deploy
            cd /tmp

            # Pull latest images
            sudo docker compose pull

            # Stop and remove old containers
            sudo docker compose down || true

            # Start both web and worker containers
            sudo docker compose up -d

            # Optional: clean up old images to save space
            sudo docker image prune -f
