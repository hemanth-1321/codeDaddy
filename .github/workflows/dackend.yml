name: Build and Deploy to Docker Hub

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Web image
      - name: Build and Push Web Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.web
          push: true
          tags: hemanth2113/codedaddy-web:latest

      # Build and push Worker image
      - name: Build and Push Worker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.worker
          push: true
          tags: hemanth2113/codedaddy-worker:latest

      # Deploy to server
      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e

            echo "‚úÖ Starting deploy on server..."

            # Ensure Docker and Compose exist
            if ! command -v docker >/dev/null; then
              echo "‚ùå Docker not found!"
              exit 1
            fi
            if ! docker compose version >/dev/null 2>&1 && ! docker-compose version >/dev/null 2>&1; then
              echo "‚ùå Docker Compose not found!"
              exit 1
            fi

            # Create project directory
            mkdir -p /app/codedaddy

            # Write environment variables
            cat <<'EOF' > /app/codedaddy/.env
            MY_GITHUB_APP_ID=${{ secrets.MY_GITHUB_APP_ID }}
            MY_GITHUB_PRIVATE_KEY=${{ secrets.MY_GITHUB_PRIVATE_KEY }}
            MY_GITHUB_INSTALLATION_ID=${{ secrets.MY_GITHUB_INSTALLATION_ID }}
            QDRANT_DB=${{ secrets.QDRANT_DB }}
            QDRANT_API_KEY=${{ secrets.QDRANT_API_KEY }}
            REDIS_URL=${{ secrets.REDIS_URL }}
            GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION=${{ secrets.AWS_REGION }}
            S3_BUCKET=${{ secrets.S3_BUCKET }}
            EOF

            # Write docker-compose.yml
            cat <<'EOF' > /app/codedaddy/docker-compose.yml
            version: "3.9"

            services:
              web:
                image: hemanth2113/codedaddy-web:latest
                env_file:
                  - /app/codedaddy/.env
                ports:
                  - "8000:8000"
                restart: unless-stopped

              worker:
                image: hemanth2113/codedaddy-worker:latest
                env_file:
                  - /app/codedaddy/.env
                restart: unless-stopped
            EOF

            cd /app/codedaddy

            echo "üöÄ Pulling latest Docker images..."
            docker compose pull

            echo "üßπ Stopping old containers..."
            docker compose down || true

            echo "üÜô Starting containers..."
            docker compose up -d

            echo "üßΩ Cleaning old images..."
            docker image prune -f

            echo "‚úÖ Deployment complete!"
